/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : Events_ReceiveFSMContext.sm
 */

package src.urn_jaus_jss_core_Events_1_0;

import framework.internalEvents.*;
import src.urn_jaus_jss_core_Events_1_0.InternalEvents.*;
import src.urn_jaus_jss_core_Events_1_0.Messages.*;
import java.io.PrintStream;

public class Events_ReceiveFSMContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public Events_ReceiveFSMContext(Events_ReceiveFSM owner)
    {
        super (Events_ReceiveFSM_SM.Receiving_Ready);

        _owner = owner;
    }

    public Events_ReceiveFSMContext(Events_ReceiveFSM owner, Events_ReceiveFSMState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void BroadcastGlobalTransition()
    {
        _transition = "BroadcastGlobalTransition";
        getState().BroadcastGlobalTransition(this);
        _transition = "";
        return;
    }

    public void BroadcastLocalTransition()
    {
        _transition = "BroadcastLocalTransition";
        getState().BroadcastLocalTransition(this);
        _transition = "";
        return;
    }

    public void CancelEventTransition()
    {
        _transition = "CancelEventTransition";
        getState().CancelEventTransition(this);
        _transition = "";
        return;
    }

    public void CreateEventTransition()
    {
        _transition = "CreateEventTransition";
        getState().CreateEventTransition(this);
        _transition = "";
        return;
    }

    public void EventErrorTransition()
    {
        _transition = "EventErrorTransition";
        getState().EventErrorTransition(this);
        _transition = "";
        return;
    }

    public void EventOccurredTransition()
    {
        _transition = "EventOccurredTransition";
        getState().EventOccurredTransition(this);
        _transition = "";
        return;
    }

    public void QueryEventsTransition()
    {
        _transition = "QueryEventsTransition";
        getState().QueryEventsTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition()
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition(CancelEvent msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(QueryEvents msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(UpdateEvent msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void SendTransition()
    {
        _transition = "SendTransition";
        getState().SendTransition(this);
        _transition = "";
        return;
    }

    public void UpdateEventTransition()
    {
        _transition = "UpdateEventTransition";
        getState().UpdateEventTransition(this);
        _transition = "";
        return;
    }

    public Events_ReceiveFSMState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((Events_ReceiveFSMState) _state);
    }

    protected Events_ReceiveFSM getOwner()
    {
        return (_owner);
    }

    public void setOwner(Events_ReceiveFSM owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private Events_ReceiveFSM _owner;

    public static abstract class Events_ReceiveFSMState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Events_ReceiveFSMState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(Events_ReceiveFSMContext context) {}
        protected void Exit(Events_ReceiveFSMContext context) {}

        protected void BroadcastGlobalTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void BroadcastLocalTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void CancelEventTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void CreateEventTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void EventErrorTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void EventOccurredTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void QueryEventsTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, CancelEvent msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, CreateEvent msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, QueryEvents msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, UpdateEvent msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void SendTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void UpdateEventTransition(Events_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void Default(Events_ReceiveFSMContext context)
        {
            if (context.getDebugFlag() == true)
            {
                PrintStream str = 
                    context.getDebugStream();

                str.println(
                    "TRANSITION   : Default");
            }

            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class Events_ReceiveFSM_SM
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final Events_ReceiveFSM_SM_Receiving_Ready Receiving_Ready =
            new Events_ReceiveFSM_SM_Receiving_Ready("Events_ReceiveFSM_SM.Receiving_Ready", 0);
        public static final Events_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE Internally_Generated_State_DO_NOT_USE =
            new Events_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE("Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE", 1);
        private static final Events_ReceiveFSM_SM_Default Default =
            new Events_ReceiveFSM_SM_Default("Events_ReceiveFSM_SM.Default", -1);

    }

    protected static class Events_ReceiveFSM_SM_Default
        extends Events_ReceiveFSMState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Events_ReceiveFSM_SM_Default(String name, int id)
        {
            super (name, id);
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class Events_ReceiveFSM_SM_Receiving_Ready
        extends Events_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Events_ReceiveFSM_SM_Receiving_Ready(String name, int id)
        {
            super (name, id);
        }

        protected void EventErrorTransition(Events_ReceiveFSMContext context)
        {
            Events_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Receiving_Ready");
            }
            if (ctxt.eventExists())
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.EventErrorTransition()");
                }

                context.clearState();
                try
                {
                    ctxt.sendRejectEventRequestAction();
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.EventErrorTransition()");
                    }

                    context.setState(endState);
                }
            }
            else
            {
                super.EventErrorTransition(context);
            }

            return;
        }

        protected void EventOccurredTransition(Events_ReceiveFSMContext context)
        {
            Events_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Receiving_Ready");
            }
            if (ctxt.eventExists())
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.EventOccurredTransition()");
                }

                context.clearState();
                try
                {
                    ctxt.sendEventAction();
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.EventOccurredTransition()");
                    }

                    context.setState(endState);
                }
            }
            else
            {
                super.EventOccurredTransition(context);
            }

            return;
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, CancelEvent msg, Receive.Body.ReceiveRec transportData)
        {
            Events_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Receiving_Ready");
            }
            if (! ctxt.eventExists(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CancelEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CancelEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }
            else if (ctxt.eventExists(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CancelEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.cancelEventAction(msg);
                    ctxt.SendAction("ConfirmEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CancelEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, CreateEvent msg, Receive.Body.ReceiveRec transportData)
        {
            Events_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Receiving_Ready");
            }
            if (ctxt.isSupported(msg) && ! ctxt.eventExists(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.createEventAction(msg);
                    ctxt.SendAction("ConfirmEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }
            else if (ctxt.isSupported(msg) && ctxt.eventExists(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.updateEventAction(msg);
                    ctxt.SendAction("ConfirmEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }
            else if (! ctxt.isSupported(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(CreateEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, QueryEvents msg, Receive.Body.ReceiveRec transportData)
        {
            Events_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Receiving_Ready");
            }
            Events_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(QueryEvents msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportEvents", msg, transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(QueryEvents msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context, UpdateEvent msg, Receive.Body.ReceiveRec transportData)
        {
            Events_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Receiving_Ready");
            }
            if (ctxt.isSupported(msg) && ctxt.eventExists(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(UpdateEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.updateEventAction(msg);
                    ctxt.SendAction("ConfirmEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(UpdateEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }
            else if (! ctxt.isSupported(msg) || ! ctxt.eventExists(msg))
            {
                Events_ReceiveFSMState endState = context.getState();

                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(UpdateEvent msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectEventRequest", msg, transportData);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Receiving_Ready.ReceiveTransition(UpdateEvent msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(endState);
                }
            }            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Events_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE
        extends Events_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Events_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE(String name, int id)
        {
            super (name, id);
        }

        protected void BroadcastGlobalTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            return;
        }

        protected void BroadcastLocalTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            return;
        }

        protected void CancelEventTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
            }

            return;
        }

        protected void CreateEventTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
            }

            return;
        }

        protected void EventErrorTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
            }

            return;
        }

        protected void EventOccurredTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
            }

            return;
        }

        protected void QueryEventsTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
            }

            return;
        }

        protected void ReceiveTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            return;
        }

        protected void SendTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            return;
        }

        protected void UpdateEventTransition(Events_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Events_ReceiveFSM_SM.Events_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
