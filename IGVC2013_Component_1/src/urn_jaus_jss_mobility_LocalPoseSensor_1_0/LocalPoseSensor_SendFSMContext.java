/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : LocalPoseSensor_SendFSMContext.sm
 */

package src.urn_jaus_jss_mobility_LocalPoseSensor_1_0;

import framework.internalEvents.*;
import src.urn_jaus_jss_mobility_LocalPoseSensor_1_0.InternalEvents.*;
import src.urn_jaus_jss_mobility_LocalPoseSensor_1_0.Messages.*;
import java.io.PrintStream;

public class LocalPoseSensor_SendFSMContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public LocalPoseSensor_SendFSMContext(LocalPoseSensor_SendFSM owner)
    {
        super (LocalPoseSensor_SendFSM_SM.Sending);

        _owner = owner;
    }

    public LocalPoseSensor_SendFSMContext(LocalPoseSensor_SendFSM owner, LocalPoseSensor_SendFSMState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void BroadcastGlobalTransition()
    {
        _transition = "BroadcastGlobalTransition";
        getState().BroadcastGlobalTransition(this);
        _transition = "";
        return;
    }

    public void BroadcastLocalTransition()
    {
        _transition = "BroadcastLocalTransition";
        getState().BroadcastLocalTransition(this);
        _transition = "";
        return;
    }

    public void CancelEventTransition()
    {
        _transition = "CancelEventTransition";
        getState().CancelEventTransition(this);
        _transition = "";
        return;
    }

    public void CreateEventTransition()
    {
        _transition = "CreateEventTransition";
        getState().CreateEventTransition(this);
        _transition = "";
        return;
    }

    public void EventErrorTransition()
    {
        _transition = "EventErrorTransition";
        getState().EventErrorTransition(this);
        _transition = "";
        return;
    }

    public void EventOccurredTransition()
    {
        _transition = "EventOccurredTransition";
        getState().EventOccurredTransition(this);
        _transition = "";
        return;
    }

    public void QueryAuthorityTransition()
    {
        _transition = "QueryAuthorityTransition";
        getState().QueryAuthorityTransition(this);
        _transition = "";
        return;
    }

    public void QueryControlTransition()
    {
        _transition = "QueryControlTransition";
        getState().QueryControlTransition(this);
        _transition = "";
        return;
    }

    public void QueryEventsTransition()
    {
        _transition = "QueryEventsTransition";
        getState().QueryEventsTransition(this);
        _transition = "";
        return;
    }

    public void QueryLocalPoseTransition()
    {
        _transition = "QueryLocalPoseTransition";
        getState().QueryLocalPoseTransition(this);
        _transition = "";
        return;
    }

    public void QueryTimeoutTransition()
    {
        _transition = "QueryTimeoutTransition";
        getState().QueryTimeoutTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition()
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this);
        _transition = "";
        return;
    }

    public void ReleaseControlTransition()
    {
        _transition = "ReleaseControlTransition";
        getState().ReleaseControlTransition(this);
        _transition = "";
        return;
    }

    public void RequestControlTransition()
    {
        _transition = "RequestControlTransition";
        getState().RequestControlTransition(this);
        _transition = "";
        return;
    }

    public void SendTransition()
    {
        _transition = "SendTransition";
        getState().SendTransition(this);
        _transition = "";
        return;
    }

    public void SetAuthorityTransition()
    {
        _transition = "SetAuthorityTransition";
        getState().SetAuthorityTransition(this);
        _transition = "";
        return;
    }

    public void SetLocalPoseTransition()
    {
        _transition = "SetLocalPoseTransition";
        getState().SetLocalPoseTransition(this);
        _transition = "";
        return;
    }

    public void TimeoutTransition()
    {
        _transition = "TimeoutTransition";
        getState().TimeoutTransition(this);
        _transition = "";
        return;
    }

    public void UpdateEventTransition()
    {
        _transition = "UpdateEventTransition";
        getState().UpdateEventTransition(this);
        _transition = "";
        return;
    }

    public LocalPoseSensor_SendFSMState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((LocalPoseSensor_SendFSMState) _state);
    }

    protected LocalPoseSensor_SendFSM getOwner()
    {
        return (_owner);
    }

    public void setOwner(LocalPoseSensor_SendFSM owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private LocalPoseSensor_SendFSM _owner;

    public static abstract class LocalPoseSensor_SendFSMState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected LocalPoseSensor_SendFSMState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(LocalPoseSensor_SendFSMContext context) {}
        protected void Exit(LocalPoseSensor_SendFSMContext context) {}

        protected void BroadcastGlobalTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void BroadcastLocalTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void CancelEventTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void CreateEventTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void EventErrorTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void EventOccurredTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryAuthorityTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryControlTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryEventsTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryLocalPoseTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void QueryTimeoutTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void ReleaseControlTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void RequestControlTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void SendTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void SetAuthorityTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void SetLocalPoseTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void TimeoutTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void UpdateEventTransition(LocalPoseSensor_SendFSMContext context)
        {
            Default(context);
        }

        protected void Default(LocalPoseSensor_SendFSMContext context)
        {
            if (context.getDebugFlag() == true)
            {
                PrintStream str = 
                    context.getDebugStream();

                str.println(
                    "TRANSITION   : Default");
            }

            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class LocalPoseSensor_SendFSM_SM
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final LocalPoseSensor_SendFSM_SM_Sending Sending =
            new LocalPoseSensor_SendFSM_SM_Sending("LocalPoseSensor_SendFSM_SM.Sending", 0);
        public static final LocalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE Internally_Generated_State_DO_NOT_USE =
            new LocalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE("LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE", 1);
        private static final LocalPoseSensor_SendFSM_SM_Default Default =
            new LocalPoseSensor_SendFSM_SM_Default("LocalPoseSensor_SendFSM_SM.Default", -1);

    }

    protected static class LocalPoseSensor_SendFSM_SM_Default
        extends LocalPoseSensor_SendFSMState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected LocalPoseSensor_SendFSM_SM_Default(String name, int id)
        {
            super (name, id);
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class LocalPoseSensor_SendFSM_SM_Sending
        extends LocalPoseSensor_SendFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private LocalPoseSensor_SendFSM_SM_Sending(String name, int id)
        {
            super (name, id);
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class LocalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE
        extends LocalPoseSensor_SendFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private LocalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE(String name, int id)
        {
            super (name, id);
        }

        protected void BroadcastGlobalTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            return;
        }

        protected void BroadcastLocalTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            return;
        }

        protected void CancelEventTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
            }

            return;
        }

        protected void CreateEventTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
            }

            return;
        }

        protected void EventErrorTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
            }

            return;
        }

        protected void EventOccurredTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
            }

            return;
        }

        protected void QueryAuthorityTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryAuthorityTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryAuthorityTransition()");
            }

            return;
        }

        protected void QueryControlTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryControlTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryControlTransition()");
            }

            return;
        }

        protected void QueryEventsTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
            }

            return;
        }

        protected void QueryLocalPoseTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryLocalPoseTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryLocalPoseTransition()");
            }

            return;
        }

        protected void QueryTimeoutTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryTimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryTimeoutTransition()");
            }

            return;
        }

        protected void ReceiveTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            return;
        }

        protected void ReleaseControlTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.ReleaseControlTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.ReleaseControlTransition()");
            }

            return;
        }

        protected void RequestControlTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.RequestControlTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.RequestControlTransition()");
            }

            return;
        }

        protected void SendTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            return;
        }

        protected void SetAuthorityTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SetAuthorityTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SetAuthorityTransition()");
            }

            return;
        }

        protected void SetLocalPoseTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SetLocalPoseTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.SetLocalPoseTransition()");
            }

            return;
        }

        protected void TimeoutTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.TimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.TimeoutTransition()");
            }

            return;
        }

        protected void UpdateEventTransition(LocalPoseSensor_SendFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : LocalPoseSensor_SendFSM_SM.LocalPoseSensor_SendFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
