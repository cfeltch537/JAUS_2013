/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : Management_ReceiveFSMContext.sm
 */

package src.urn_jaus_jss_core_Management_1_0;

import framework.internalEvents.*;
import src.JausGUI;
import src.urn_jaus_jss_core_AccessControl_1_0.AccessControl_ReceiveFSM;
import src.urn_jaus_jss_core_Management_1_0.InternalEvents.*;
import src.urn_jaus_jss_core_Management_1_0.Messages.*;
import java.io.PrintStream;

public class Management_ReceiveFSMContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public Management_ReceiveFSMContext(Management_ReceiveFSM owner)
    {
        super (Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);

        _owner = owner;
    }

    public Management_ReceiveFSMContext(Management_ReceiveFSM owner, Management_ReceiveFSMState initState)
    {
        super (initState);

        _owner = owner;
    }

    public void enterStartState()
    {
        getState().Entry(this);
        return;
    }

    public void BroadcastGlobalTransition()
    {
        _transition = "BroadcastGlobalTransition";
        getState().BroadcastGlobalTransition(this);
        _transition = "";
        return;
    }

    public void BroadcastLocalTransition()
    {
        _transition = "BroadcastLocalTransition";
        getState().BroadcastLocalTransition(this);
        _transition = "";
        return;
    }

    public void CancelEventTransition()
    {
        _transition = "CancelEventTransition";
        getState().CancelEventTransition(this);
        _transition = "";
        return;
    }

    public void ClearEmergencyTransition()
    {
        _transition = "ClearEmergencyTransition";
        getState().ClearEmergencyTransition(this);
        _transition = "";
        return;
    }

    public void CreateEventTransition()
    {
        _transition = "CreateEventTransition";
        getState().CreateEventTransition(this);
        _transition = "";
        return;
    }

    public void EventErrorTransition()
    {
        _transition = "EventErrorTransition";
        getState().EventErrorTransition(this);
        _transition = "";
        return;
    }

    public void EventOccurredTransition()
    {
        _transition = "EventOccurredTransition";
        getState().EventOccurredTransition(this);
        _transition = "";
        return;
    }

    public void FailureTransition()
    {
        _transition = "FailureTransition";
        getState().FailureTransition(this);
        _transition = "";
        return;
    }

    public void InitializedTransition()
    {
        _transition = "InitializedTransition";
        getState().InitializedTransition(this);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(this, ie);
        _transition = "";
        return;
    }

    public void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)
    {
        _transition = "InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition";
        getState().InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(this, ie);
        _transition = "";
        return;
    }

    public void QueryAuthorityTransition()
    {
        _transition = "QueryAuthorityTransition";
        getState().QueryAuthorityTransition(this);
        _transition = "";
        return;
    }

    public void QueryControlTransition()
    {
        _transition = "QueryControlTransition";
        getState().QueryControlTransition(this);
        _transition = "";
        return;
    }

    public void QueryEventsTransition()
    {
        _transition = "QueryEventsTransition";
        getState().QueryEventsTransition(this);
        _transition = "";
        return;
    }

    public void QueryStatusTransition()
    {
        _transition = "QueryStatusTransition";
        getState().QueryStatusTransition(this);
        _transition = "";
        return;
    }

    public void QueryTimeoutTransition()
    {
        _transition = "QueryTimeoutTransition";
        getState().QueryTimeoutTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition()
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this);
        _transition = "";
        return;
    }

    public void ReceiveTransition(Reset msg)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg);
        _transition = "";
        return;
    }

    public void ReceiveTransition(SetAuthority msg)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg);
        _transition = "";
        return;
    }

    public void ReceiveTransition(Shutdown msg)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg);
        _transition = "";
        return;
    }

    public void ReceiveTransition(ClearEmergency msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(ReleaseControl msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(RequestControl msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(Resume msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        
        // Used to avoid problem with not being able to read state
        if(AccessControl_ReceiveFSM.controllingComponentID.equals(transportData.getSrcComponentID())
        		&&AccessControl_ReceiveFSM.controllingNodeID.equals(transportData.getSrcNodeID())
        		&&AccessControl_ReceiveFSM.controllingSubsystemID.equals(transportData.getSrcSubsystemID())){
        	Management_ReceiveFSM.stateString = "Ready";
        	JausGUI.addOutputText("State => "+ Management_ReceiveFSM.stateString +" (Ready)");
        }       
        //----------------------------
        
        return;
    }

    public void ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        return;
    }

    public void ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        
        // Used to avoid problem with not being able to read state
        if(AccessControl_ReceiveFSM.controllingComponentID.equals(transportData.getSrcComponentID())
        		&&AccessControl_ReceiveFSM.controllingNodeID.equals(transportData.getSrcNodeID())
        		&&AccessControl_ReceiveFSM.controllingSubsystemID.equals(transportData.getSrcSubsystemID())){
        	Management_ReceiveFSM.stateString = "Shutdown";
        	JausGUI.addOutputText("State => "+ Management_ReceiveFSM.stateString +" (Shutdown)");
        }       
        //----------------------------
        
        return;
    }

    public void ReceiveTransition(Standby msg, Receive.Body.ReceiveRec transportData)
    {
        _transition = "ReceiveTransition";
        getState().ReceiveTransition(this, msg, transportData);
        _transition = "";
        
     // Used to avoid problem with not being able to read state
        if(AccessControl_ReceiveFSM.controllingComponentID.equals(transportData.getSrcComponentID())
        		&&AccessControl_ReceiveFSM.controllingNodeID.equals(transportData.getSrcNodeID())
        		&&AccessControl_ReceiveFSM.controllingSubsystemID.equals(transportData.getSrcSubsystemID())){
        	Management_ReceiveFSM.stateString = "Standby";
        	JausGUI.addOutputText("State => "+ Management_ReceiveFSM.stateString +" (Standby)");
        }       
        //----------------------------
        
        return;
    }

    public void ReleaseControlTransition()
    {
        _transition = "ReleaseControlTransition";
        getState().ReleaseControlTransition(this);
        _transition = "";
        return;
    }

    public void RequestControlTransition()
    {
        _transition = "RequestControlTransition";
        getState().RequestControlTransition(this);
        _transition = "";
        return;
    }

    public void ResetTransition()
    {
        _transition = "ResetTransition";
        getState().ResetTransition(this);
        _transition = "";
        return;
    }

    public void ResumeTransition()
    {
        _transition = "ResumeTransition";
        getState().ResumeTransition(this);
        _transition = "";
        return;
    }

    public void SendTransition()
    {
        _transition = "SendTransition";
        getState().SendTransition(this);
        _transition = "";
        return;
    }

    public void SetAuthorityTransition()
    {
        _transition = "SetAuthorityTransition";
        getState().SetAuthorityTransition(this);
        _transition = "";
        return;
    }

    public void SetEmergencyTransition()
    {
        _transition = "SetEmergencyTransition";
        getState().SetEmergencyTransition(this);
        _transition = "";
        return;
    }

    public void ShutdownTransition()
    {
        _transition = "ShutdownTransition";
        getState().ShutdownTransition(this);
        _transition = "";
        return;
    }

    public void StandbyTransition()
    {
        _transition = "StandbyTransition";
        getState().StandbyTransition(this);
        _transition = "";
        return;
    }

    public void TimeoutTransition()
    {
        _transition = "TimeoutTransition";
        getState().TimeoutTransition(this);
        _transition = "";
        return;
    }

    public void UpdateEventTransition()
    {
        _transition = "UpdateEventTransition";
        getState().UpdateEventTransition(this);
        _transition = "";
        return;
    }

    public Management_ReceiveFSMState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((Management_ReceiveFSMState) _state);
    }

    protected Management_ReceiveFSM getOwner()
    {
        return (_owner);
    }

    public void setOwner(Management_ReceiveFSM owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private Management_ReceiveFSM _owner;

    public static abstract class Management_ReceiveFSMState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Management_ReceiveFSMState(String name, int id)
        {
            super (name, id);
        }

        protected void Entry(Management_ReceiveFSMContext context) {}
        protected void Exit(Management_ReceiveFSMContext context) {}

        protected void BroadcastGlobalTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void BroadcastLocalTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void CancelEventTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ClearEmergencyTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void CreateEventTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void EventErrorTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void EventOccurredTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void InitializedTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Default(context);
        }

        protected void QueryAuthorityTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void QueryControlTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void QueryEventsTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void QueryStatusTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void QueryTimeoutTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetAuthority msg)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, ClearEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, ReleaseControl msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, RequestControl msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Resume msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Standby msg, Receive.Body.ReceiveRec transportData)
        {
            Default(context);
        }

        protected void ReleaseControlTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void RequestControlTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ResetTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ResumeTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void SendTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void SetAuthorityTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void SetEmergencyTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void ShutdownTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void StandbyTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void TimeoutTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void UpdateEventTransition(Management_ReceiveFSMContext context)
        {
            Default(context);
        }

        protected void Default(Management_ReceiveFSMContext context)
        {
            if (context.getDebugFlag() == true)
            {
                PrintStream str = 
                    context.getDebugStream();

                str.println(
                    "TRANSITION   : Default");
            }

            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //
    }

    /* package */ static abstract class Management_ReceiveFSM_SM
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //
        public static final Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Standby Receiving_Ready_NotControlled_StateA_Standby =
            new Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Standby("Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby", 0);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Init Receiving_Ready_NotControlled_StateA_Init =
            new Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Init("Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init", 1);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Failure Receiving_Ready_NotControlled_StateA_Failure =
            new Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Failure("Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure", 2);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Shutdown Receiving_Ready_NotControlled_StateA_Shutdown =
            new Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Shutdown("Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown", 3);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Emergency Receiving_Ready_NotControlled_StateA_Emergency =
            new Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Emergency("Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency", 4);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Standby Receiving_Ready_Controlled_StateB_Standby =
            new Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Standby("Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby", 5);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Ready Receiving_Ready_Controlled_StateB_Ready =
            new Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Ready("Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready", 6);
        public static final Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Emergency Receiving_Ready_Controlled_StateB_Emergency =
            new Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Emergency("Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency", 7);
        public static final Management_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE Internally_Generated_State_DO_NOT_USE =
            new Management_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE("Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE", 8);
        private static final Management_ReceiveFSM_SM_Default Default =
            new Management_ReceiveFSM_SM_Default("Management_ReceiveFSM_SM.Default", -1);

    }

    protected static class Management_ReceiveFSM_SM_Default
        extends Management_ReceiveFSMState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Management_ReceiveFSM_SM_Default(String name, int id)
        {
            super (name, id);
        }
    //-----------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Standby
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Standby(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.FailureTransition()");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.FailureTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Init
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Init(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.FailureTransition()");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.FailureTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InitializedTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InitializedTransition()");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InitializedTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Failure
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Failure(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.FailureTransition()");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.FailureTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Shutdown
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Shutdown(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.FailureTransition()");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.FailureTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Emergency
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_NotControlled_StateA_Emergency(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.FailureTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.FailureTransition()");
            }

            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(Reset msg)");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(Reset msg)");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetAuthority msg)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(SetAuthority msg)");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(SetAuthority msg)");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(Shutdown msg)");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(Shutdown msg)");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, ClearEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }
            if (ctxt.isIDStored( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(ClearEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.popWrapper_0f9fae233502305d99c64a59f0f80a4e(msg, transportData);
                    ctxt.processNotifications(context.peakTopStateStack(), null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(ClearEmergency msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.popState();
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, RequestControl msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(RequestControl msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ConfirmControl", "NOT_AVAILABLE", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(RequestControl msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void TimeoutTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.TimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency.TimeoutTransition()");
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Standby
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Standby(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.FailureTransition()");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("RejectControl", "CONTROL_RELEASED");
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.FailureTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectControl", "CONTROL_RELEASED", transportData);
                    ctxt.initializeAction();
                    ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Resume msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(Resume msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(Resume msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectControl", "CONTROL_RELEASED", transportData);
                    ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby.ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Ready
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Ready(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.FailureTransition()");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("RejectControl", "CONTROL_RELEASED");
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.FailureTransition()");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectControl", "CONTROL_RELEASED", transportData);
                    ctxt.initializeAction();
                    ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectControl", "CONTROL_RELEASED", transportData);
                    ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Standby msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(Standby msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready.ReceiveTransition(Standby msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Emergency
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Receiving_Ready_Controlled_StateB_Emergency(String name, int id)
        {
            super (name, id);
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.FailureTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.FailureTransition()");
            }

            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_ReceivingTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_ControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateBTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Ready", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_ReadyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Ready);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_Controlled_StateB_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlledTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateATransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Emergency", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_EmergencyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Failure", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_FailureTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Failure);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.initializeAction();
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_InitTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_ShutdownTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(Management_ReceiveFSMContext context, InternalEvent ie)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            (context.getState()).Exit(context);
            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
            }

            context.clearState();
            try
            {
                ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Standby", ie);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.InternalStateChange_To_Management_ReceiveFSM_Receiving_Ready_NotControlled_StateA_StandbyTransition(InternalEvent ie)");
                }

                context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Standby);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Reset msg)");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Reset msg)");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetAuthority msg)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(SetAuthority msg)");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(SetAuthority msg)");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Shutdown msg)");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Shutdown msg)");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, ClearEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            if (ctxt.isIDStored( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(ClearEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.popWrapper_baf5fee6be943f3c815a84f544a0981e(msg, transportData);
                    ctxt.processNotifications(context.peakTopStateStack(), null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(ClearEmergency msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.popState();
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, QueryStatus msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ReportStatus", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(QueryStatus msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, ReleaseControl msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(ReleaseControl msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("RejectControl", "NOT_AVAILABLE", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(ReleaseControl msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, RequestControl msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(RequestControl msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.SendAction("ConfirmControl", "NOT_AVAILABLE", transportData);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(RequestControl msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Reset msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectControl", "CONTROL_RELEASED", transportData);
                    ctxt.initializeAction();
                    ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Init", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Reset msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Init);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, SetEmergency msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            Management_ReceiveFSMState endState = context.getState();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
            }

            context.clearState();
            try
            {
                ctxt.StoreIDAction(transportData);
                ctxt.processNotifications("Receiving_Ready_Controlled_StateB_Emergency", null);
            }
            finally
            {
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(SetEmergency msg, Receive.Body.ReceiveRec transportData)");
                }

                context.setState(endState);
                context.pushState(Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency);
                (context.getState()).Entry(context);
            }
            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context, Shutdown msg, Receive.Body.ReceiveRec transportData)
        {
            Management_ReceiveFSM ctxt = context.getOwner();

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }
            if (ctxt.isControllingClient( transportData ))
            {

                (context.getState()).Exit(context);
                if (context.getDebugFlag() == true)
                {
                    PrintStream str = context.getDebugStream();

                    str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)");
                }

                context.clearState();
                try
                {
                    ctxt.SendAction("RejectControl", "CONTROL_RELEASED", transportData);
                    ctxt.processNotifications("Receiving_Ready_NotControlled_StateA_Shutdown", null);
                }
                finally
                {
                    if (context.getDebugFlag() == true)
                    {
                        PrintStream str = context.getDebugStream();

                        str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.ReceiveTransition(Shutdown msg, Receive.Body.ReceiveRec transportData)");
                    }

                    context.setState(Management_ReceiveFSM_SM.Receiving_Ready_NotControlled_StateA_Shutdown);
                    (context.getState()).Entry(context);
                }
            }
            else
            {
                super.ReceiveTransition(context, msg, transportData);
            }

            return;
        }

        protected void TimeoutTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.TimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Receiving_Ready_Controlled_StateB_Emergency.TimeoutTransition()");
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }

    private static final class Management_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE
        extends Management_ReceiveFSM_SM_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Management_ReceiveFSM_SM_Internally_Generated_State_DO_NOT_USE(String name, int id)
        {
            super (name, id);
        }

        protected void BroadcastGlobalTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastGlobalTransition()");
            }

            return;
        }

        protected void BroadcastLocalTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.BroadcastLocalTransition()");
            }

            return;
        }

        protected void CancelEventTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CancelEventTransition()");
            }

            return;
        }

        protected void ClearEmergencyTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ClearEmergencyTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ClearEmergencyTransition()");
            }

            return;
        }

        protected void CreateEventTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.CreateEventTransition()");
            }

            return;
        }

        protected void EventErrorTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventErrorTransition()");
            }

            return;
        }

        protected void EventOccurredTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.EventOccurredTransition()");
            }

            return;
        }

        protected void FailureTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.FailureTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.FailureTransition()");
            }

            return;
        }

        protected void InitializedTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.InitializedTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.InitializedTransition()");
            }

            return;
        }

        protected void QueryAuthorityTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryAuthorityTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryAuthorityTransition()");
            }

            return;
        }

        protected void QueryControlTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryControlTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryControlTransition()");
            }

            return;
        }

        protected void QueryEventsTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryEventsTransition()");
            }

            return;
        }

        protected void QueryStatusTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryStatusTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryStatusTransition()");
            }

            return;
        }

        protected void QueryTimeoutTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryTimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.QueryTimeoutTransition()");
            }

            return;
        }

        protected void ReceiveTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReceiveTransition()");
            }

            return;
        }

        protected void ReleaseControlTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReleaseControlTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ReleaseControlTransition()");
            }

            return;
        }

        protected void RequestControlTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.RequestControlTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.RequestControlTransition()");
            }

            return;
        }

        protected void ResetTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ResetTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ResetTransition()");
            }

            return;
        }

        protected void ResumeTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ResumeTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ResumeTransition()");
            }

            return;
        }

        protected void SendTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SendTransition()");
            }

            return;
        }

        protected void SetAuthorityTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SetAuthorityTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SetAuthorityTransition()");
            }

            return;
        }

        protected void SetEmergencyTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SetEmergencyTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.SetEmergencyTransition()");
            }

            return;
        }

        protected void ShutdownTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ShutdownTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.ShutdownTransition()");
            }

            return;
        }

        protected void StandbyTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.StandbyTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.StandbyTransition()");
            }

            return;
        }

        protected void TimeoutTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.TimeoutTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.TimeoutTransition()");
            }

            return;
        }

        protected void UpdateEventTransition(Management_ReceiveFSMContext context)
        {

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("LEAVING STATE   : Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("ENTER TRANSITION: Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
            }

            if (context.getDebugFlag() == true)
            {
                PrintStream str = context.getDebugStream();

                str.println("EXIT TRANSITION : Management_ReceiveFSM_SM.Management_ReceiveFSM_SM.Internally_Generated_State_DO_NOT_USE.UpdateEventTransition()");
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
